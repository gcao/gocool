%h1=@page_header || t('upload.page_header')
-form_for :upload, :html => {:multipart => true, :class => 'bp'} do |form|
  %fieldset.span-18
    -if flash[:success]
      .span-18
        .success= flash[:success]
    -elsif flash[:error]
      .span-18
        .error= flash[:error]
    .form_row.span-18
      .span-2
        = form.label :email, mark_required + t('email.label')
      #emailContainer.span-16.last
        -if show_masked_email?
          %span#upload_masked_email.email_edit
            = masked_email
            %span.note
              = t('form.click_to_change')
        -else
          = form.text_field :email, "maxlength" => 60

    .form_row.span-18
      .span-2
        = form.label :upload, mark_required + t('upload.file_label')
      .span-16.last
        #file_fields
          = form.file_field :upload, :size => 60

    %hr.space
    .span-14{:align => 'center'}
      = form.submit t('upload.submit_button')
      %input{:type => "reset", :value => t('form.reset_button')}
    
    .form_legend.span-18
      %span
        = mark_required
        = t('form.marked_required')
      
%script{:src => "http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js", :type => "text/javascript"}
= javascript_include_tag "upload"
= javascript_include_tag "/validanguage/validanguage_uncompressed.js"
:javascript
  validanguage.el.upload_email = {
    required: true,
    errorMsg: "#{t('email.required')}",
    validations: [
      {
        name: "validanguage.validateEmail(text)",
        errorMsg: "#{t('email.invalid')}"
      }
    ]
  };
  validanguage.el.upload_upload = {
    required: true,
    errorMsg: "#{t('upload.file_required')}"
  };